% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/p_val.R
\name{pvalue}
\alias{pvalue}
\title{Calculate P-Value with Gamma Test and Sensitivity Analysis}
\usage{
pvalue(
  treated_lst,
  control_lst,
  Z,
  X,
  R,
  test_beta = 0,
  rank = FALSE,
  alpha = 0.05,
  alpha1 = NA,
  alpha2 = 0.025,
  gamma = 4,
  conv_test = FALSE,
  model = "rf",
  predicts = NULL,
  seed = NULL,
  gurobi_params1 = list(),
  gurobi_params2 = list(),
  tol = 1e-05,
  verbose = TRUE,
  nbreak = 10,
  ...
)
}
\arguments{
\item{treated_lst}{A list containing data for the treated group.}

\item{control_lst}{A list containing data for the control group.}

\item{Z}{A binary vector indicating treatment assignment.}

\item{X}{A matrix or data frame of covariates.}

\item{R}{A vector of outcomes.}

\item{test_beta}{A numeric value used to adjust \code{q_vec} when \code{Z == 1}. Default is 0.}

\item{rank}{Logical. If \code{TRUE}, ranks the \code{q_vec} values. Default is \code{FALSE}.}

\item{alpha}{A numeric value specifying the overall significance level. Default is 0.05.}

\item{alpha1}{A numeric value specifying the first stage significance level. Default is \code{NA}.}

\item{alpha2}{A numeric value specifying the second stage significance level. Default is 0.025.}

\item{gamma}{A numeric value specifying the gamma parameter for constraints. Default is 4.}

\item{conv_test}{Logical. If \code{TRUE}, performs a convergence test. Default is \code{FALSE}.}

\item{model}{A character string specifying the prediction model to use. Options include \code{"rf"}, \code{"svm"}, etc. Default is \code{"rf"}.}

\item{predicts}{Optional pre-computed predictions to use for the analysis. Default is \code{NULL}.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is \code{NULL}.}

\item{gurobi_params1}{A list of parameters to pass to the Gurobi solver for the gamma test. Default is an empty list.}

\item{gurobi_params2}{A list of parameters to pass to the Gurobi solver for the sensitivity analysis. Default is an empty list.}

\item{tol}{A numeric value specifying the tolerance for optimization. Default is \code{1e-5}.}

\item{verbose}{Logical. If \code{TRUE}, prints additional details during execution. Default is \code{TRUE}.}

\item{nbreak}{An integer specifying the maximum number of iterations allowed before terminating the process in case of errors. Default is 10.}

\item{...}{Additional arguments passed to the preprocessing or prediction functions.}
}
\value{
A data frame with the following columns:
\itemize{
\item \code{obj1}: Objective value for group 1.
\item \code{obj2}: Objective value for group 2.
\item \code{group1}: Result of the null hypothesis test for group 1.
\item \code{group2}: Result of the null hypothesis test for group 2.
\item \code{F0.group1}: Gamma test result for group 1.
\item \code{F0.group2}: Gamma test result for group 2.
\item \code{bigH}: Combined result of the sensitivity analysis.
\item \code{pval}: Combined p-value from the analysis.
\item \code{pval.group1}: P-value for group 1.
\item \code{pval.group2}: P-value for group 2.
}
}
\description{
This function calculates the p-value for a given treated and control dataset
using a combination of a gamma test and sensitivity analysis. It processes the data,
applies optimization techniques, and determines whether to reject the null hypothesis.
}
\details{
This function first preprocesses the treated and control datasets using the \code{preprocess} function.
It then performs a gamma test using \code{gamma_test} to calculate quadratic programming objectives
and constraints. Finally, it conducts a sensitivity analysis using \code{get_p} to compute p-values
and determine whether to reject or accept the null hypothesis.

The significance levels (\code{alpha}, \code{alpha1}, \code{alpha2}) are adjusted dynamically based on the input.
The function assumes that required helper functions such as \code{preprocess}, \code{gamma_test},
and \code{get_p} are defined elsewhere and available in the environment.
}
\examples{
# Example usage of the maintest function

# Load a preprocessed dataset (replace 'sample_data' with your actual data object)
data(sample_data)

# Extract variables from the dataset
treated_lst <- sample_data$treated_lst
control_lst <- sample_data$control_lst
Z <- sample_data$dataset$Z  # Treatment assignment
X <- sample_data$dataset$X  # Covariates
R <- sample_data$dataset$R  # Outcome variable

# Perform the main hypothesis test
result <- pvalue(
  treated_lst = treated_lst,
  control_lst = control_lst,
  Z = Z,
  X = X,
  R = R,
  test_beta = 0,
  rank = FALSE,
  alpha = 0.05,
  gamma = 4,
  model = "rf",  # Random forest
  seed = 123,
  gurobi_params1 = list(TimeLimit = 1000),
  gurobi_params2 = list(TimeLimit = 1000),
  tol=1e-5,
  verbose=TRUE,
  nbreak=10
)

# View the result
print(result)

}
