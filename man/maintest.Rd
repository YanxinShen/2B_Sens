% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maintest.R
\name{maintest}
\alias{maintest}
\title{Main Hypothesis Testing Function}
\usage{
maintest(
  treated_lst,
  control_lst,
  Z,
  X,
  R,
  test_beta = 0,
  rank = FALSE,
  alpha = 0.05,
  alpha1 = NA,
  alpha2 = 0.025,
  gamma = 4,
  conv_test = FALSE,
  model = "rf",
  predicts = NULL,
  seed = NULL,
  gurobi_params1 = list(),
  gurobi_params2 = list(),
  ...
)
}
\arguments{
\item{treated_lst}{List of indices for treated subjects}

\item{control_lst}{List of indices for matched control subjects}

\item{Z}{Numeric vector indicating treatment assignment (1 for treated, 0 for control)}

\item{X}{Data frame containing covariates}

\item{R}{Numeric vector containing outcome variables}

\item{test_beta}{Numeric value representing the treatment effect to test against (default is 0)}

\item{rank}{Logical, whether to apply a rank test on \code{q_vec} (default is FALSE)}

\item{alpha}{Numeric, significance level for the main test (default is 0.05)}

\item{alpha1}{Numeric, significance level for the first stage gamma test (default is NA)}

\item{alpha2}{Numeric, significance level for the second stage sensitivity analysis (default is 0.025)}

\item{gamma}{Numeric, sensitivity analysis parameter (default is 4)}

\item{conv_test}{Logical, whether to perform conventional sensitivity analysis (default is FALSE)}

\item{model}{Character string specifying the machine learning model used for propensity score estimation. Options include:
\itemize{
\item \code{"rf"} - Random forest (default).
\item \code{"xgboost"} - Extreme Gradient Boosting.
\item \code{"logistic"} - Logistic regression.
\item \code{"svm"} - Support vector machine.
}}

\item{predicts}{Optional, pre-computed predictions to bypass the model training step.}

\item{seed}{Numeric, optional random seed for reproducibility.}

\item{gurobi_params1}{List of additional parameters for the Gurobi optimizer during the gamma test.}

\item{gurobi_params2}{List of additional parameters for the Gurobi optimizer during the main hypothesis test.}

\item{...}{Additional parameters passed to the machine learning model.}
}
\value{
A data frame with test results and sensitivity analysis metrics, including:
\itemize{
\item \code{obj1} - Objective value for group 1
\item \code{obj2} - Objective value for group 2
\item \code{group1} - Hypothesis result for group 1 (accept(0) or reject(1))
\item \code{group2} - Hypothesis result for group 2 (accept(0) or reject(1))
\item \code{F0.group1} - Stage 1 result for group 1 (accept(0) or reject(1))
\item \code{F0.group2} - Stage 1 result for group 2 (accept(0) or reject(1))
\item \code{bigH} - Overall hypothesis decision (0 for acceptance, 1 for rejection)
}
}
\description{
This function performs hypothesis testing between treated and matched control groups.
It includes data preprocessing, sensitivity analysis, and testing
based on specified parameters and model types.
}
\details{
The function executes the following steps:
\itemize{
\item Preprocess data using the \code{\link{preprocess}} function, generating datasets for tests.
\item Perform a gamma test using the \code{\link{gamma_test}} function to evaluate sensitivity.
\item If the gamma test passes, proceed to the main hypothesis test using the \code{\link{Htest}} function.
\item Combine results from both tests to generate a final decision.
}
The significance levels (\code{alpha1} and \code{alpha2}) are automatically adjusted if not provided.
}
\examples{
# Example usage of the maintest function

# Load a preprocessed dataset (replace 'sample_data' with your actual data object)
data(sample_data)

# Extract variables from the dataset
treated_lst <- sample_data$treated_lst
control_lst <- sample_data$control_lst
Z <- sample_data$dataset$Z  # Treatment assignment
X <- sample_data$dataset$X  # Covariates
R <- sample_data$dataset$R  # Outcome variable

# Perform the main hypothesis test
result <- maintest(
  treated_lst = treated_lst,
  control_lst = control_lst,
  Z = Z,
  X = X,
  R = R,
  test_beta = 0,
  rank = FALSE,
  alpha = 0.05,
  gamma = 4,
  model = "rf",  # Random forest
  seed = 123,
  gurobi_params1 = list(TimeLimit = 1000),
  gurobi_params2 = list(TimeLimit = 1000)
)

# View the result
print(result)

# Interpretation:
# - `obj1` and `obj2`: Objective values for groups 1 and 2.
# - `group1` and `group2`: Hypothesis test results for groups 1 and 2.
# - `bigH`: Overall hypothesis decision (0 = accept null hypothesis, 1 = reject null hypothesis).

}
